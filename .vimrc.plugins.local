" This file will be loaded after .vimrc.plugins, 
" but before 'filetype plugin on', 'filetype indent on' and 'syntax on' been executed. 
" This file is designed to be safe to add your own plugins and plugins' configuration.

" Add your customized plugins:
" Example: Plugin 'foo/bar/foobar'

Plugin 'Chiel92/vim-autoformat'

" colorscheme related {
" use F8, S-F8 to switch colorscheme
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-colorscheme-switcher'
Plugin 'jonathanfilip/vim-lucius'
" colorscheme related }

" ex-taglist {
nnoremap <unique> <silent> <F2> :TlistToggle<CR>
" ex-taglist }

" ex-minibufexpl {
" NOTE: minibufexpl makes Vim editing slow when there are too many buffers opened
Plugin 'exvim/ex-minibufexpl'
let g:miniBufExplBuffersNeeded = 0
let g:miniBufExplUseSingleClick = 1 " If you would like to single click on tabs rather than double clicking on them to goto the selected buffer.
let g:miniBufExplMaxSize = 1 " <max lines: default 0> setting this to 0 will mean the window gets as big as needed to fit all your buffers.
let g:miniBufExplTabWrap = 1
" let g:miniBufExplDebugMode  = 3
" let g:miniBufExplDebugLevel = 0
" ex-minibufexpl }

" vim-airline {
" NOTE: vim-airline makes Vim editing slow when there are too many buffers opened
" ---------------------------------------------------
Plugin 'bling/vim-airline'

if has('gui_running') && g:hostname != '2012-DEV'
    let g:airline_powerline_fonts = 1
else
    let g:airline_powerline_fonts = 0
endif

" NOTE: When you open lots of buffers and typing text, it is so slow.
let g:airline#extensions#tabline#enabled = 0
let g:airline#extensions#tabline#show_buffers = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline#extensions#tabline#fnamemod = ':t'
" let g:airline_section_b = "%{fnamemodify(bufname('%'),':p:.:h').'/'}"
" let g:airline_section_c = '%t'
" let g:airline_section_warning = airline#section#create(['whitespace']) " NOTE: airline#section#create has no effect in .vimrc initialize pahse
" let g:airline_section_warning = '%{airline#util#wrap(airline#extensions#whitespace#check(),0)}'
let g:airline_section_warning = ''
" vim-airline }

" nim related {
Plugin 'zah/nim.vim'

fun! JumpToDef()
  if exists("*GotoDefinition_" . &filetype)
    call GotoDefinition_{&filetype}()
  else
    exe "norm! \<C-]>"
  endif
endf

" Jump to tag
nn <c-g> :call JumpToDef()<cr>
ino <c-g> <esc>:call JumpToDef()<cr>i

let tlist_nim_settings='nim;f:procedure;t:class;t:enum;t:tuple;f:method;t:template'
" nim related }

" emmet
" autocmd FileType html,css imap <expr> <tab> emmet#expandAbbrIntelligent("\<tab>")

Plugin 'oplatek/Conque-Shell'

Plugin 'nvie/vim-flake8'
autocmd BufWritePost *.py call Flake8()

let g:flake8_show_quickfix=0  " don't show
let g:flake8_show_in_gutter=1  " show
let g:flake8_show_in_file=1  " show

Plugin 'hynek/vim-python-pep8-indent'
let g:pymode_indent = 0

" vim-easymotion
let g:EasyMotion_smartcase = 1
